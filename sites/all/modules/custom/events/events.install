<?php

/**
 * Implementation of hook_schema().
 */
function events_schema() {
  $schema['events_users'] = array(
    'description' => t('Stores users invited to events.'),
    'fields' => array(
      'id'     => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => t('Primary key autoincrement.'),
      ),
      'event_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => t('Id of the event.'),
      ),
      'sender_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => t('Id of the invitation to event sender.'),
      ),
      'user_id' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => t('Id of the invitation reciever user. Can be null if facebook user invited.'),
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => t('Status of the invitation (1 - new, 2 - pending, 3 - accepted, 4 - declined).'),
      ),
      'facebook_id' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => t('Id of the invitation reciever user (facebook). Can be null if regulat klicango user invited.'),
      ),
    ),
    'primary key' => array('id'),
  );
  
  $schema['friends_facebook_invited'] = array(
    'description' => t('Stores simple data about friends invited from facebook.'),
    'fields' => array(
      'facebook_id'     => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => t('Facebook user id.'),
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => t('Friend name.'),
      ),
    ),
  );
  
  return $schema;
}

function events_update_6001() {
    $return = array();
    drupal_install_schema('events');
    
    $return[] = array('success' => TRUE, 'query' => 'Events schema installed');
    return $return;
}

function events_uninstall() {
  drupal_uninstall_schema('events');
}